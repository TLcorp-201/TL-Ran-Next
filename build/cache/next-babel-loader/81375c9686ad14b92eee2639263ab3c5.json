{"ast":null,"code":"/* eslint-disable no-restricted-syntax */\nexport default (() => {});\nexport function dump(obj) {\n  let out = '';\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      out += `${key}: ${obj[key]}\\n`;\n    }\n  }\n\n  return out;\n}\nexport function mergeObjects(...args) {\n  const dst = {};\n  let src;\n  let p;\n  const aargs = [].splice.call(args, 0);\n\n  while (aargs.length > 0) {\n    const idx = 0;\n    src = aargs.splice(0, 1)[idx];\n\n    if (toString.call(src) === '[object Object]') {\n      for (p in src) {\n        if (Object.prototype.hasOwnProperty.call(src, p)) {\n          if (toString.call(src[p]) === '[object Object]') {\n            dst[p] = mergeObjects(dst[p] || {}, src[p]);\n          } else {\n            dst[p] = src[p];\n          }\n        }\n      }\n    }\n  }\n\n  return dst;\n}\n/* eslint-enable no-restricted-syntax */","map":{"version":3,"sources":["/home/tuancr/Documents/Project/BeeReading/web/libraries/helpers.js"],"names":["dump","obj","out","key","Object","prototype","hasOwnProperty","call","mergeObjects","args","dst","src","p","aargs","splice","length","idx","toString"],"mappings":"AAAA;AAEA,gBAAe,MAAM,CAAE,CAAvB;AAEA,OAAO,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACxB,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,MAAMC,GAAX,IAAkBF,GAAlB,EAAuB;AACrB,QAAIG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,CAAJ,EAAoD;AAClDD,MAAAA,GAAG,IAAK,GAAEC,GAAI,KAAIF,GAAG,CAACE,GAAD,CAAM,IAA3B;AACD;AACF;;AAED,SAAOD,GAAP;AACD;AAED,OAAO,SAASM,YAAT,CAAsB,GAAGC,IAAzB,EAA+B;AACpC,QAAMC,GAAG,GAAG,EAAZ;AACA,MAAIC,GAAJ;AACA,MAAIC,CAAJ;AACA,QAAMC,KAAK,GAAG,GAAGC,MAAH,CAAUP,IAAV,CAAeE,IAAf,EAAqB,CAArB,CAAd;;AAEA,SAAOI,KAAK,CAACE,MAAN,GAAe,CAAtB,EAAyB;AACvB,UAAMC,GAAG,GAAG,CAAZ;AACAL,IAAAA,GAAG,GAAGE,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmBE,GAAnB,CAAN;;AACA,QAAIC,QAAQ,CAACV,IAAT,CAAcI,GAAd,MAAuB,iBAA3B,EAA8C;AAC5C,WAAKC,CAAL,IAAUD,GAAV,EAAe;AACb,YAAIP,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCI,GAArC,EAA0CC,CAA1C,CAAJ,EAAkD;AAChD,cAAIK,QAAQ,CAACV,IAAT,CAAcI,GAAG,CAACC,CAAD,CAAjB,MAA0B,iBAA9B,EAAiD;AAC/CF,YAAAA,GAAG,CAACE,CAAD,CAAH,GAASJ,YAAY,CAACE,GAAG,CAACE,CAAD,CAAH,IAAU,EAAX,EAAeD,GAAG,CAACC,CAAD,CAAlB,CAArB;AACD,WAFD,MAEO;AACLF,YAAAA,GAAG,CAACE,CAAD,CAAH,GAASD,GAAG,CAACC,CAAD,CAAZ;AACD;AACF;AACF;AACF;AACF;;AAED,SAAOF,GAAP;AACD;AAED","sourcesContent":["/* eslint-disable no-restricted-syntax */\n\nexport default () => {};\n\nexport function dump(obj) {\n  let out = '';\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      out += `${key}: ${obj[key]}\\n`;\n    }\n  }\n\n  return out;\n}\n\nexport function mergeObjects(...args) {\n  const dst = {};\n  let src;\n  let p;\n  const aargs = [].splice.call(args, 0);\n\n  while (aargs.length > 0) {\n    const idx = 0;\n    src = aargs.splice(0, 1)[idx];\n    if (toString.call(src) === '[object Object]') {\n      for (p in src) {\n        if (Object.prototype.hasOwnProperty.call(src, p)) {\n          if (toString.call(src[p]) === '[object Object]') {\n            dst[p] = mergeObjects(dst[p] || {}, src[p]);\n          } else {\n            dst[p] = src[p];\n          }\n        }\n      }\n    }\n  }\n\n  return dst;\n}\n\n/* eslint-enable no-restricted-syntax */\n"]},"metadata":{},"sourceType":"module"}