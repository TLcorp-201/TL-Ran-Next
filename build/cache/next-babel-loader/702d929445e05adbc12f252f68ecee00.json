{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { withRouter } from 'next/router';\nimport { Helmet } from 'react-helmet';\nimport App from \"../components/App\";\nimport NetworkStatus from \"../components/NetworkStatus\";\n\nvar Default = function Default(props) {\n  return __jsx(App, null, __jsx(Helmet, null, __jsx(\"title\", null, props.title && props.title !== '' ? \"\".concat(props.title, \" :: RAN! React . GraphQL . Next.js Toolkit\") : 'RAN! React . GraphQL . Next.js Toolkit')), props.children, __jsx(NetworkStatus, null));\n};\n\nDefault.defaultProps = {\n  title: ''\n};\nexport default withRouter(Default);","map":{"version":3,"sources":["/home/tuancr/Documents/Project/BeeReading/web/containers/Default.tsx"],"names":["React","withRouter","Helmet","App","NetworkStatus","Default","props","title","children","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,GAAP;AACA,OAAOC,aAAP;;AAEA,IAAMC,OAGJ,GAAG,SAHCA,OAGD,CAAAC,KAAK;AAAA,SACR,MAAC,GAAD,QACE,MAAC,MAAD,QACE,qBACGA,KAAK,CAACC,KAAN,IAAeD,KAAK,CAACC,KAAN,KAAgB,EAA/B,aACMD,KAAK,CAACC,KADZ,kDAEG,wCAHN,CADF,CADF,EAQGD,KAAK,CAACE,QART,EASE,MAAC,aAAD,OATF,CADQ;AAAA,CAHV;;AAiBAH,OAAO,CAACI,YAAR,GAAuB;AACrBF,EAAAA,KAAK,EAAE;AADc,CAAvB;AAIA,eAAeN,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import * as React from 'react';\nimport { withRouter } from 'next/router';\nimport { Helmet } from 'react-helmet';\nimport App from '../components/App';\nimport NetworkStatus from '../components/NetworkStatus';\n\nconst Default: React.FunctionComponent<{\n  router?: any;\n  title?: string;\n}> = props => (\n  <App>\n    <Helmet>\n      <title>\n        {props.title && props.title !== ''\n          ? `${props.title} :: RAN! React . GraphQL . Next.js Toolkit`\n          : 'RAN! React . GraphQL . Next.js Toolkit'}\n      </title>\n    </Helmet>\n    {props.children}\n    <NetworkStatus />\n  </App>\n);\n\nDefault.defaultProps = {\n  title: '',\n};\n\nexport default withRouter(Default);\n"]},"metadata":{},"sourceType":"module"}